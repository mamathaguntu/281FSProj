import React, { Component } from 'react'
import { Table, Menu, Icon, Button } from 'semantic-ui-react';
import { get } from 'axios';
import times from 'lodash.times';
import { Helmet } from 'react-helmet';
import Page from './Page';
import DynamoAPI from './DynamoAPI';

const TOTAL_PER_PAGE = 10;

export class DisplayUserDetails extends Component {
    constructor(props) {
        super(props);
    
        this.state = {
          users: [],
          page: 0,
          totalPages: 0,
        };
        this.incrementPage = this.incrementPage.bind(this);
        this.decrementPage = this.decrementPage.bind(this);
        this.setPage = this.setPage.bind(this);
        this.handleDelete = this.handleDelete.bind(this);
      }

      componentDidMount() {
        this.getUsers();
      }
    
      componentWillReceiveProps({ location = {} }) {
        if (location.pathname === '/users' && location.pathname !== this.props.location.pathname) {
          this.getUsers();
        }
      }

      //Get user data from Dynamo DB
      getUsers() {
          new DynamoAPI().getUserDetails()
          .then(({ data }) => {
            const { users } = data;
            const totalPages = Math.ceil(users.length / TOTAL_PER_PAGE);
    
            this.setState({
              users: data.users,
              page: 0,
              totalPages,
            });
          });
      }

      setPage(page) {
        return () => {
          this.setState({ page });
        };
      }
    
      decrementPage() {
        const { page } = this.state;
    
        this.setState({ page: page - 1 });
      }
    
      incrementPage() {
        const { page } = this.state;
    
        this.setState({ page: page + 1 });
      }
    
      handleDelete(userId) {
        const { users } = this.state;
    
        this.setState({
          users: users.filter(u => u.id !== userId),
        });
      }

    render() {
        const { users, page, totalPages } = this.state;
        const startIndex = page * TOTAL_PER_PAGE;
        return (
            <Page title="Users">
            <Helmet>
            <title>FileStorage | Users</title>
            </Helmet>

            <Table celled striped>
                <Table.Header>
                    <Table.Row>
                        <Table.HeaderCell>USER ID</Table.HeaderCell>
                        <Table.HeaderCell>FIRST NAME</Table.HeaderCell>
                        <Table.HeaderCell>LAST NAME</Table.HeaderCell>
                        <Table.HeaderCell>PASSWORD</Table.HeaderCell>
                    </Table.Row>
                </Table.Header>
                <Table.Body>
                    {users.slice(startIndex, startIndex + TOTAL_PER_PAGE).map(user =>
                    (<Table.Row key={user.id}>
                        <Table.Cell>{user.firstName}</Table.Cell>
                        <Table.Cell>{user.lastName}</Table.Cell>
                        <Table.Cell>{user.password}</Table.Cell>
                    </Table.Row>),
                    )}
                </Table.Body>
            </Table>
        </Page>
        )
    }
}

export default DisplayUserDetails
